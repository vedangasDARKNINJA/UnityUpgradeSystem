using UnityEngine;
using UnityEditor;

[CustomEditor(typeof())]
public class #SCRIPTNAME# : UpgradeItemEditor
{
	protected override void OnEnable()
	{
		// Specify the line height for the Reorderable List
		base.OnEnable();
        list.elementHeight = EditorGUIUtility.singleLineHeight;
	}

	protected override void DrawListItems(Rect rect, int index, bool isActive, bool isFocused)
    {
		// The actual GUI inside of the Reorderable List
		// Your code here ...
		SerializedProperty element = list.serializedProperty.GetArrayElementAtIndex(index);
        Rect singleLineRect = rect;
        singleLineRect.height = EditorGUIUtility.singleLineHeight;

        if (index != 0)
            EditorGUI.LabelField(singleLineRect, $"Upgrade Level {index}",EditorStyles.boldLabel);
        else
            EditorGUI.LabelField(singleLineRect, "Default Level", EditorStyles.boldLabel);

		singleLineRect.y += EditorGUIUtility.singleLineHeight;
	}


	protected override void DrawHeader(Rect rect)
    {
		// The header of the Reorderable List
        EditorGUI.LabelField(rect, "Upgrade Levels");
    }
}